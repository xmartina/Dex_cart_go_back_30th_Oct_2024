<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-07-16 05:48:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer\Helpers; class RequirementsChecker { private $_minPhpVersion = "\x37\x2e\62\56\60"; public function check(array $requirements) { $results = []; foreach ($requirements as $type => $requirement) { switch ($type) { case "\160\x68\x70": foreach ($requirements[$type] as $requirement) { $results["\162\145\161\x75\x69\x72\x65\155\x65\156\164\163"][$type][$requirement] = true; if (extension_loaded($requirement)) { goto IY2Dc; } $results["\162\x65\x71\x75\151\x72\145\x6d\145\x6e\x74\163"][$type][$requirement] = false; $results["\x65\162\x72\157\x72\x73"] = true; IY2Dc: vUPPA: } nq4G1: goto eyAbS; case "\x61\160\x61\143\x68\x65": foreach ($requirements[$type] as $requirement) { if (!function_exists("\x61\x70\x61\143\x68\x65\137\x67\x65\x74\x5f\155\x6f\144\x75\x6c\x65\x73")) { goto gd17B; } $results["\x72\145\x71\x75\151\162\x65\155\x65\x6e\164\163"][$type][$requirement] = true; if (in_array($requirement, apache_get_modules())) { goto idL0K; } $results["\162\x65\161\x75\x69\x72\x65\x6d\x65\156\164\163"][$type][$requirement] = false; $results["\145\x72\162\x6f\162\x73"] = true; idL0K: gd17B: zFakd: } VXgPc: goto eyAbS; } P6G2H: eyAbS: jry8z: } I4ZJ1: return $results; } public function checkPHPversion(string $minPhpVersion = null, string $maxPhpVersion = null) { $currentPhpVersion = $this->getPhpVersionInfo(); $supported = false; if (!($minPhpVersion == null)) { goto d6Xn2; } $minPhpVersion = $this->getMinPhpVersion(); d6Xn2: if ($maxPhpVersion == null && version_compare($currentPhpVersion["\166\145\x72\163\x69\x6f\x6e"], $minPhpVersion, "\76\75")) { goto dLLYL; } if (version_compare($currentPhpVersion["\166\145\x72\x73\x69\157\156"], $minPhpVersion, "\x3e\x3d") && version_compare($currentPhpVersion["\x76\145\162\x73\x69\157\156"], $maxPhpVersion, "\x3c\x3d")) { goto xiUfX; } goto NmTic; dLLYL: $supported = true; goto NmTic; xiUfX: $supported = true; NmTic: $phpStatus = ["\x66\x75\154\154" => $currentPhpVersion["\146\165\154\x6c"], "\143\165\162\162\x65\x6e\164" => $currentPhpVersion["\x76\145\162\163\x69\157\x6e"], "\155\x69\156\151\x6d\165\155" => $minPhpVersion, "\x6d\x61\x78\x69\155\x75\x6d" => $maxPhpVersion, "\163\165\x70\160\x6f\x72\164\x65\x64" => $supported]; return $phpStatus; } private static function getPhpVersionInfo() { $currentVersionFull = PHP_VERSION; preg_match("\43\x5e\x5c\x64\53\x28\134\56\134\x64\53\x29\52\43", $currentVersionFull, $filtered); $currentVersion = $filtered[0]; return ["\146\x75\154\x6c" => $currentVersionFull, "\x76\x65\x72\x73\x69\157\x6e" => $currentVersion]; } protected function getMinPhpVersion() { return $this->_minPhpVersion; } }
